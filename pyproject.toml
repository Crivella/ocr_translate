[build-system]
# build the package with [flit](https://flit.readthedocs.io)
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[project]
# See https://www.python.org/dev/peps/pep-0621/
name = "django-ocr_translate"
dynamic = ["version"] # read from ocr_translate/__init__.py
description = "Django app for OCR and translation"
authors = [
    { name = "Davide Grassano" },
]
readme = "README.md"
license = { file = "LICENSE.txt" }
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Framework :: Django",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Natural Language :: English",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Database :: Database Engines/Servers",
    "Topic :: Text Processing :: Linguistic",
    "Intended Audience :: End Users/Desktop",
]
keywords = ["django", "ocr", "translation"]
requires-python = ">=3.10"
dependencies = [
    "numpy~=1.24.1",
    "Django~=4.2.3",
    "Pillow~=10.0.1",
]

[project.urls]
Source = "https://github.com/crivella/ocr_translate"

[project.optional-dependencies]
mysql = [
    "pymysql==1.1.0",
]
postgres = [
    "psycopg[binary]==3.1.9",
]
docs = [
    "sphinx~=7.2.6",
    "sphinx_design~=0.5.0",
    "sphinx-rtd-theme~=1.3.0",
    "sphinx-rtd-dark-mode~=1.3.0",
    "sphinxcontrib-openapi"
]
tests = [
    "pytest",
    "pytest-cov",
    "pytest-django~=4.5.2",
    "pytest-regressions~=2.4",
]
pre-commit = [
    "pre-commit~=3.3.3",
    "pylint~=2.17.4",
    "pylint-pytest~=1.1.2",
    "pylint-django~=2.5.3",
]
release = [
    "flit",
    "pyinstaller"
]

[project.entry-points."ocr_translate.tsl_data"]
"tsl.manual" = "ocr_translate.ocr_tsl.tsl:manual_data"

[tool.flit.module]
name = "ocr_translate"

[tool.flit.sdist]
exclude = [
    ".gitignore", ".github", ".pre-commit-config.yaml",
    "icon.ico", "run_server.py", "build.sh",
    "Dockerfile-cpu", "Dockerfile-gpu", "nginx.default", "start-server.sh",
    "mysite/", "mysite/*", "manage.py", "tests/", "tests/*",
    "docs/", "docs/*"
    ]

[tool.pytest.ini_options]
testpaths = ["tests"]
DJANGO_SETTINGS_MODULE = "mysite.settings"
log_cli = 1

[tool.pylint.main]
load-plugins = [
    "pylint_django",
    "pylint_pytest"
]
django-settings-module = "mysite.settings"

[tool.pylint.messages_control]
disable = [
    "logging-fstring-interpolation",
    "global-statement",
    "broad-exception-caught",
    "too-few-public-methods",
]


[tool.pylint.format]
max-line-length = 120
good-names = [
    "_",
    "l", "r", "b", "t",
    "l1", "r1", "b1", "t1",
    "l2", "r2", "b2", "t2",
    "i", "j",
    "k", "v",
    "f",
]

[tool.pylint.design]
max-args = 10
max-locals = 20
max-attributes = 12
